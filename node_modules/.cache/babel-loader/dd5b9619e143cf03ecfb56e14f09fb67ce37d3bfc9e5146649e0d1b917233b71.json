{"ast":null,"code":"import React,{useState}from'react';import Card from'./components/Card';import InfoModal from'./components/InfoModal';import EditParams from'./components/EditParams';import TriggerList from'./components/TriggerList';import Button from'./components/Button';import generateRandomCardStats from'./card-logic/CardGenerator';import{generateRandomDefaultCard}from'./card-logic/DefaultCardData';import{useGlobalCardStats}from'./card-logic/CardStats';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Main(){const{globalCardStats,usePointDistributionSystem}=useGlobalCardStats();const[card,setCard]=useState(null);const[isCustom,setIsCustom]=useState(true);const[customText,setCustomText]=useState('');const[customImage,setCustomImage]=useState(null);const[isModalOpen,setIsModalOpen]=useState(false);const[isEditParamsOpen,setIsEditParamsOpen]=useState(false);const[isTriggerListOpen,setIsTriggerListOpen]=useState(false);// New state for TriggerList modal\nconst[cardHistory,setCardHistory]=useState([]);const handleImageUpload=e=>{setCustomImage(URL.createObjectURL(e.target.files[0]));};const handleCustomTextChange=e=>{setCustomText(e.target.value);};const updateCardHistory=newCard=>{setCardHistory(prevHistory=>{const updatedHistory=[newCard,...prevHistory];return updatedHistory.slice(0,40);// Keep only the last 40 cards including active card\n});};const generateCustomCard=()=>{const newCard=generateRandomCardStats(globalCardStats,usePointDistributionSystem);newCard.cardName=customText;newCard.customSprite=customImage;setCard(newCard);updateCardHistory(newCard);};const generateDefaultCard=()=>{const defaultCard=generateRandomDefaultCard();const newCard=generateRandomCardStats(globalCardStats,usePointDistributionSystem);newCard.cardName=defaultCard.name;newCard.cardSprite=\"\".concat(process.env.PUBLIC_URL,\"/cardImages/\").concat(defaultCard.filePath);setCard(newCard);updateCardHistory(newCard);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 grid grid-cols-2 sm:flex gap-2\",children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setIsCustom(true),color:\"blue\",isActive:isCustom,children:\"Custom Cards\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>setIsCustom(false),color:\"green\",isActive:!isCustom,children:\"Default Cards\"}),/*#__PURE__*/_jsx(\"div\",{className:\"hidden sm:block border-l-2 border-blue-500 mx-2\"}),\" \",/*#__PURE__*/_jsx(Button,{onClick:()=>setIsEditParamsOpen(true),color:\"yellow\",children:\"Edit Generation Parameters\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>setIsModalOpen(true),color:\"yellow\",children:\"Game Info\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>setIsTriggerListOpen(true),color:\"yellow\",children:\"Trigger List\"})]}),isCustom?/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 text-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Card Name\",value:customText,onChange:handleCustomTextChange,className:\"mb-4 p-2 border rounded-md mr-1\"}),/*#__PURE__*/_jsx(\"input\",{id:\"file-upload\",type:\"file\",accept:\"image/png, image/jpeg, image/jpg\",onChange:handleImageUpload}),/*#__PURE__*/_jsx(Button,{onClick:generateCustomCard,color:\"blue\",children:\"Generate Custom Card\"})]}):/*#__PURE__*/_jsx(Button,{onClick:generateDefaultCard,color:\"green\",className:\"mb-10\",children:\"Generate New Card\"}),card&&/*#__PURE__*/_jsx(Card,{card:card}),cardHistory.length>1&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"hr\",{className:\"mt-14 w-full border-2 border-blue-500\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold my-4 underline\",children:\"Card History\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex overflow-x-auto mt-8 pb-4 space-x-4 w-full\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex space-x-4 items-center\",children:cardHistory.slice(1).map((card,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[index>0&&/*#__PURE__*/_jsx(\"div\",{className:\"h-full border-l-2 border-blue-500 mx-4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(Card,{card:card})})]},index))})})]}),/*#__PURE__*/_jsx(InfoModal,{isOpen:isModalOpen,onClose:()=>setIsModalOpen(false)}),/*#__PURE__*/_jsx(EditParams,{isOpen:isEditParamsOpen,onClose:()=>setIsEditParamsOpen(false)}),/*#__PURE__*/_jsx(TriggerList,{isOpen:isTriggerListOpen,onClose:()=>setIsTriggerListOpen(false)}),\" \"]});}export default Main;","map":{"version":3,"names":["React","useState","Card","InfoModal","EditParams","TriggerList","Button","generateRandomCardStats","generateRandomDefaultCard","useGlobalCardStats","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Main","globalCardStats","usePointDistributionSystem","card","setCard","isCustom","setIsCustom","customText","setCustomText","customImage","setCustomImage","isModalOpen","setIsModalOpen","isEditParamsOpen","setIsEditParamsOpen","isTriggerListOpen","setIsTriggerListOpen","cardHistory","setCardHistory","handleImageUpload","e","URL","createObjectURL","target","files","handleCustomTextChange","value","updateCardHistory","newCard","prevHistory","updatedHistory","slice","generateCustomCard","cardName","customSprite","generateDefaultCard","defaultCard","name","cardSprite","concat","process","env","PUBLIC_URL","filePath","children","className","onClick","color","isActive","type","placeholder","onChange","id","accept","length","map","index","isOpen","onClose"],"sources":["C:/Users/tosho/Desktop/CPSC471/Project/monster-mash-card-generator/src/Main.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Card from './components/Card';\r\nimport InfoModal from './components/InfoModal';\r\nimport EditParams from './components/EditParams';\r\nimport TriggerList from './components/TriggerList';\r\nimport Button from './components/Button';\r\nimport generateRandomCardStats from './card-logic/CardGenerator';\r\nimport { generateRandomDefaultCard } from './card-logic/DefaultCardData';\r\nimport { useGlobalCardStats } from './card-logic/CardStats';\r\n\r\nfunction Main() {\r\n  const { globalCardStats, usePointDistributionSystem } = useGlobalCardStats();\r\n  const [card, setCard] = useState(null);\r\n  const [isCustom, setIsCustom] = useState(true);\r\n  const [customText, setCustomText] = useState('');\r\n  const [customImage, setCustomImage] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isEditParamsOpen, setIsEditParamsOpen] = useState(false);\r\n  const [isTriggerListOpen, setIsTriggerListOpen] = useState(false); // New state for TriggerList modal\r\n  const [cardHistory, setCardHistory] = useState([]);\r\n\r\n  const handleImageUpload = (e) => {\r\n    setCustomImage(URL.createObjectURL(e.target.files[0]));\r\n  };\r\n\r\n  const handleCustomTextChange = (e) => {\r\n    setCustomText(e.target.value);\r\n  };\r\n\r\n  const updateCardHistory = (newCard) => {\r\n    setCardHistory((prevHistory) => {\r\n      const updatedHistory = [newCard, ...prevHistory];\r\n      return updatedHistory.slice(0, 40); // Keep only the last 40 cards including active card\r\n    });\r\n  };\r\n\r\n  const generateCustomCard = () => {\r\n    const newCard = generateRandomCardStats(globalCardStats, usePointDistributionSystem);\r\n    newCard.cardName = customText;\r\n    newCard.customSprite = customImage;\r\n    setCard(newCard);\r\n    updateCardHistory(newCard);\r\n  };\r\n\r\n  const generateDefaultCard = () => {\r\n    const defaultCard = generateRandomDefaultCard();\r\n    const newCard = generateRandomCardStats(globalCardStats, usePointDistributionSystem);\r\n    newCard.cardName = defaultCard.name;\r\n    newCard.cardSprite = `${process.env.PUBLIC_URL}/cardImages/${defaultCard.filePath}`;\r\n    setCard(newCard);\r\n    updateCardHistory(newCard);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-8 grid grid-cols-2 sm:flex gap-2\">\r\n        <Button onClick={() => setIsCustom(true)} color=\"blue\" isActive={isCustom}>\r\n          Custom Cards\r\n        </Button>\r\n        <Button onClick={() => setIsCustom(false)} color=\"green\" isActive={!isCustom}>\r\n          Default Cards\r\n        </Button>\r\n        <div className=\"hidden sm:block border-l-2 border-blue-500 mx-2\"></div> {/* Vertical line */}\r\n        <Button onClick={() => setIsEditParamsOpen(true)} color=\"yellow\">\r\n          Edit Generation Parameters\r\n        </Button>\r\n        <Button onClick={() => setIsModalOpen(true)} color=\"yellow\">\r\n          Game Info\r\n        </Button>\r\n        <Button onClick={() => setIsTriggerListOpen(true)} color=\"yellow\">\r\n          Trigger List\r\n        </Button>\r\n      </div>\r\n\r\n      {isCustom ? (\r\n        <div className=\"mb-8 text-center\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Card Name\"\r\n            value={customText}\r\n            onChange={handleCustomTextChange}\r\n            className=\"mb-4 p-2 border rounded-md mr-1\"\r\n          />\r\n          <input\r\n            id=\"file-upload\"\r\n            type=\"file\"\r\n            accept=\"image/png, image/jpeg, image/jpg\"\r\n            onChange={handleImageUpload}\r\n          />\r\n          <Button onClick={generateCustomCard} color=\"blue\">\r\n            Generate Custom Card\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <Button onClick={generateDefaultCard} color=\"green\" className=\"mb-10\">\r\n          Generate New Card\r\n        </Button>\r\n      )}\r\n\r\n      {card && <Card card={card} />}\r\n\r\n      {cardHistory.length > 1 && (\r\n        <>\r\n          <hr className=\"mt-14 w-full border-2 border-blue-500\" />\r\n          <h2 className=\"text-2xl font-bold my-4 underline\">Card History</h2>\r\n          <div className=\"flex overflow-x-auto mt-8 pb-4 space-x-4 w-full\">\r\n            <div className=\"flex space-x-4 items-center\">\r\n              {cardHistory.slice(1).map((card, index) => (\r\n                <React.Fragment key={index}>\r\n                  {index > 0 && <div className=\"h-full border-l-2 border-blue-500 mx-4\"></div>}\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Card card={card} />\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* modal popups */}\r\n      <InfoModal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} />\r\n      <EditParams isOpen={isEditParamsOpen} onClose={() => setIsEditParamsOpen(false)} />\r\n      <TriggerList isOpen={isTriggerListOpen} onClose={() => setIsTriggerListOpen(false)} /> {/* New TriggerList modal */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}