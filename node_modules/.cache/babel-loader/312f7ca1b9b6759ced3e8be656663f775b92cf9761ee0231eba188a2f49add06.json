{"ast":null,"code":"var _jsxFileName = \"/Users/chacenielson/Documents/git-pull/card-generator/src/card-logic/CardStats.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\n\n// The card class with information about the card\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Card {\n  constructor() {\n    this.cardName = \"\";\n    this.cardSprite = null;\n    this.AccuracyPoints = 0;\n    this.DefencePoints = 0;\n    this.DamagePoints = 0;\n    this.HealthPoints = 0;\n    this.rarity = null;\n    this.Trigger = \"\";\n    this.Effect = \"\";\n  }\n}\n\n// Initial values for context\nconst initialGlobalCardStats = {\n  healthRange: [4, 4],\n  damageRange: [4, 4],\n  defenceRange: [4, 4],\n  accuracyRange: [4, 4],\n  distributionPoints: 12\n};\nconst initialUsePointDistributionSystem = true;\n\n// Create context\nconst GlobalCardStatsContext = /*#__PURE__*/createContext();\nexport const GlobalCardStatsProvider = ({\n  children\n}) => {\n  _s();\n  // Create state with initial values\n  const [globalCardStats, setGlobalCardStats] = useState({\n    ...initialGlobalCardStats\n  });\n  const [usePointDistributionSystem, setUsePointDistributionSystem] = useState(initialUsePointDistributionSystem);\n\n  // Function to reset state\n  const resetGlobalCardStats = () => {\n    setGlobalCardStats({\n      ...initialGlobalCardStats\n    });\n    setUsePointDistributionSystem(initialUsePointDistributionSystem);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalCardStatsContext.Provider, {\n    value: {\n      globalCardStats,\n      setGlobalCardStats,\n      usePointDistributionSystem,\n      setUsePointDistributionSystem,\n      resetGlobalCardStats\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the context\n_s(GlobalCardStatsProvider, \"Xrsbx34O7TsOthBGVVTg7Nqw8aE=\");\n_c = GlobalCardStatsProvider;\nexport const useGlobalCardStats = () => {\n  _s2();\n  return useContext(GlobalCardStatsContext);\n};\n_s2(useGlobalCardStats, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalCardStatsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","cloneDeep","jsxDEV","_jsxDEV","Card","constructor","cardName","cardSprite","AccuracyPoints","DefencePoints","DamagePoints","HealthPoints","rarity","Trigger","Effect","initialGlobalCardStats","healthRange","damageRange","defenceRange","accuracyRange","distributionPoints","initialUsePointDistributionSystem","GlobalCardStatsContext","GlobalCardStatsProvider","children","_s","globalCardStats","setGlobalCardStats","usePointDistributionSystem","setUsePointDistributionSystem","resetGlobalCardStats","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalCardStats","_s2","$RefreshReg$"],"sources":["/Users/chacenielson/Documents/git-pull/card-generator/src/card-logic/CardStats.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\n\n\n// The card class with information about the card\nexport class Card {\n  constructor() {\n    this.cardName = \"\";\n    this.cardSprite = null;\n    this.AccuracyPoints = 0;\n    this.DefencePoints = 0;\n    this.DamagePoints = 0;\n    this.HealthPoints = 0;\n    this.rarity = null; \n    this.Trigger = \"\";\n    this.Effect = \"\";\n  }\n}\n\n// Initial values for context\nconst initialGlobalCardStats = {\n  healthRange: [4, 4],\n  damageRange: [4, 4],\n  defenceRange: [4, 4],\n  accuracyRange: [4, 4],\n  distributionPoints: 12\n};\n\nconst initialUsePointDistributionSystem = true;\n\n// Create context\nconst GlobalCardStatsContext = createContext();\n\nexport const GlobalCardStatsProvider = ({ children }) => {\n  // Create state with initial values\n  const [globalCardStats, setGlobalCardStats] = useState({ ...initialGlobalCardStats });\n  const [usePointDistributionSystem, setUsePointDistributionSystem] = useState(initialUsePointDistributionSystem);\n\n  // Function to reset state\n  const resetGlobalCardStats = () => {\n    setGlobalCardStats({ ...initialGlobalCardStats });\n    setUsePointDistributionSystem(initialUsePointDistributionSystem);\n  };\n\n  return (\n    <GlobalCardStatsContext.Provider value={{ globalCardStats, setGlobalCardStats, usePointDistributionSystem, setUsePointDistributionSystem, resetGlobalCardStats }}>\n      {children}\n    </GlobalCardStatsContext.Provider>\n  );\n};\n\n// Custom hook to use the context\nexport const useGlobalCardStats = () => {\n  return useContext(GlobalCardStatsContext);\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,OAAOC,SAAS,MAAM,kBAAkB;;AAGxC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,IAAI,CAAC;EAChBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,cAAc,GAAG,CAAC;IACvB,IAAI,CAACC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,MAAM,GAAG,EAAE;EAClB;AACF;;AAEA;AACA,MAAMC,sBAAsB,GAAG;EAC7BC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnBC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpBC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACrBC,kBAAkB,EAAE;AACtB,CAAC;AAED,MAAMC,iCAAiC,GAAG,IAAI;;AAE9C;AACA,MAAMC,sBAAsB,gBAAGxB,aAAa,CAAC,CAAC;AAE9C,OAAO,MAAMyB,uBAAuB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvD;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC;IAAE,GAAGe;EAAuB,CAAC,CAAC;EACrF,MAAM,CAACa,0BAA0B,EAAEC,6BAA6B,CAAC,GAAG7B,QAAQ,CAACqB,iCAAiC,CAAC;;EAE/G;EACA,MAAMS,oBAAoB,GAAGA,CAAA,KAAM;IACjCH,kBAAkB,CAAC;MAAE,GAAGZ;IAAuB,CAAC,CAAC;IACjDc,6BAA6B,CAACR,iCAAiC,CAAC;EAClE,CAAC;EAED,oBACElB,OAAA,CAACmB,sBAAsB,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEN,eAAe;MAAEC,kBAAkB;MAAEC,0BAA0B;MAAEC,6BAA6B;MAAEC;IAAqB,CAAE;IAAAN,QAAA,EAC9JA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACsB,CAAC;AAEtC,CAAC;;AAED;AAAAX,EAAA,CAlBaF,uBAAuB;AAAAc,EAAA,GAAvBd,uBAAuB;AAmBpC,OAAO,MAAMe,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACtC,OAAOxC,UAAU,CAACuB,sBAAsB,CAAC;AAC3C,CAAC;AAACiB,GAAA,CAFWD,kBAAkB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}