{"ast":null,"code":"var _jsxFileName = \"/Users/chacenielson/Documents/git-pull/card-generator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Card from './components/Card';\nimport InfoModal from './components/InfoModal';\nimport Button from './components/Button';\nimport generateRandomCardStats from './card-logic/CardGenerator';\nimport { generateRandomDefaultCard } from './card-logic/DefaultCardData';\nimport { toPng } from 'html-to-image';\nimport { toast, Toaster } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [card, setCard] = useState(null);\n  const [isCustom, setIsCustom] = useState(true);\n  const [customText, setCustomText] = useState('');\n  const [customImage, setCustomImage] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const cardRef = useRef();\n  const handleImageUpload = e => {\n    setCustomImage(URL.createObjectURL(e.target.files[0]));\n  };\n  const handleCustomTextChange = e => {\n    setCustomText(e.target.value);\n  };\n  const generateCustomCard = () => {\n    const newCard = generateRandomCardStats();\n    newCard.cardName = customText;\n    newCard.customSprite = customImage;\n    setCard(newCard);\n  };\n  const generateDefaultCard = () => {\n    const defaultCard = generateRandomDefaultCard();\n    const newCard = generateRandomCardStats();\n    newCard.cardName = defaultCard.name;\n    newCard.cardSprite = `${process.env.PUBLIC_URL}/cardImages/${defaultCard.filePath}`;\n    setCard(newCard);\n  };\n  const downloadCardImage = () => {\n    if (cardRef.current) {\n      toPng(cardRef.current).then(dataUrl => {\n        const link = document.createElement('a');\n        link.download = card.cardName + \".png\" || \"card.png\";\n        link.href = dataUrl;\n        link.click();\n      }).catch(error => {\n        console.error('Oops, something went wrong!', error);\n      });\n    }\n  };\n  const copyCardImageToClipboard = () => {\n    if (cardRef.current) {\n      toPng(cardRef.current).then(dataUrl => {\n        fetch(dataUrl).then(res => res.blob()).then(blob => {\n          const item = new ClipboardItem({\n            'image/png': blob\n          });\n          navigator.clipboard.write([item]).then(() => {\n            toast.success('Image copied to clipboard!');\n          }).catch(error => {\n            console.error('Oops, something went wrong!', error);\n          });\n        });\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-start bg-gray-200 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 flex\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsCustom(true),\n        color: \"blue\",\n        isActive: isCustom,\n        className: \"mr-4\",\n        children: \"Custom Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsCustom(false),\n        color: \"green\",\n        isActive: !isCustom,\n        children: \"Default Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsModalOpen(true),\n        color: \"yellow\",\n        className: \"ml-4\",\n        children: \"Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), isCustom ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        accept: \"image/png, image/jpeg, image/jpg\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Card Name\",\n        value: customText,\n        onChange: handleCustomTextChange,\n        className: \"mb-4 p-2 border rounded-md mr-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: generateCustomCard,\n        color: \"blue\",\n        children: \"Generate Custom Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: generateDefaultCard,\n      color: \"green\",\n      className: \"mb-10\",\n      children: \"Generate Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), card && /*#__PURE__*/_jsxDEV(Card, {\n      cardRef: cardRef,\n      card: card\n      // downloadCardImage={downloadCardImage}\n      // copyCardImageToClipboard={copyCardImageToClipboard}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InfoModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ybahZAm9UIzi+LZbgF4rCcggYmc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Card","InfoModal","Button","generateRandomCardStats","generateRandomDefaultCard","toPng","toast","Toaster","jsxDEV","_jsxDEV","App","_s","card","setCard","isCustom","setIsCustom","customText","setCustomText","customImage","setCustomImage","isModalOpen","setIsModalOpen","cardRef","handleImageUpload","e","URL","createObjectURL","target","files","handleCustomTextChange","value","generateCustomCard","newCard","cardName","customSprite","generateDefaultCard","defaultCard","name","cardSprite","process","env","PUBLIC_URL","filePath","downloadCardImage","current","then","dataUrl","link","document","createElement","download","href","click","catch","error","console","copyCardImageToClipboard","fetch","res","blob","item","ClipboardItem","navigator","clipboard","write","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","isActive","id","type","accept","onChange","placeholder","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/chacenielson/Documents/git-pull/card-generator/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Card from './components/Card';\nimport InfoModal from './components/InfoModal';\nimport Button from './components/Button';\nimport generateRandomCardStats from './card-logic/CardGenerator';\nimport { generateRandomDefaultCard } from './card-logic/DefaultCardData';\nimport { toPng } from 'html-to-image';\nimport { toast, Toaster } from 'react-hot-toast';\n\nfunction App() {\n  const [card, setCard] = useState(null);\n  const [isCustom, setIsCustom] = useState(true);\n  const [customText, setCustomText] = useState('');\n  const [customImage, setCustomImage] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const cardRef = useRef();\n\n  const handleImageUpload = (e) => {\n    setCustomImage(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const handleCustomTextChange = (e) => {\n    setCustomText(e.target.value);\n  };\n\n  const generateCustomCard = () => {\n    const newCard = generateRandomCardStats();\n    newCard.cardName = customText;\n    newCard.customSprite = customImage;\n    setCard(newCard);\n  };\n\n  const generateDefaultCard = () => {\n    const defaultCard = generateRandomDefaultCard();\n    const newCard = generateRandomCardStats();\n    newCard.cardName = defaultCard.name;\n    newCard.cardSprite = `${process.env.PUBLIC_URL}/cardImages/${defaultCard.filePath}`;\n    setCard(newCard);\n  };\n\n  const downloadCardImage = () => {\n    if (cardRef.current) {\n      toPng(cardRef.current)\n        .then((dataUrl) => {\n          const link = document.createElement('a');\n          link.download = card.cardName + \".png\" || \"card.png\";\n          link.href = dataUrl;\n          link.click();\n        })\n        .catch((error) => {\n          console.error('Oops, something went wrong!', error);\n        });\n    }\n  };\n\n  const copyCardImageToClipboard = () => {\n    if (cardRef.current) {\n      toPng(cardRef.current)\n        .then((dataUrl) => {\n          fetch(dataUrl)\n            .then(res => res.blob())\n            .then(blob => {\n              const item = new ClipboardItem({ 'image/png': blob });\n              navigator.clipboard.write([item])\n                .then(() => {\n                  toast.success('Image copied to clipboard!');\n                })\n                .catch((error) => {\n                  console.error('Oops, something went wrong!', error);\n                });\n            });\n        });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-start bg-gray-200 p-4\">\n      <Toaster />\n\n      <div className=\"mb-8 flex\">\n        <Button\n          onClick={() => setIsCustom(true)}\n          color=\"blue\"\n          isActive={isCustom}\n          className=\"mr-4\"\n        >\n          Custom Cards\n        </Button>\n        <Button\n          onClick={() => setIsCustom(false)}\n          color=\"green\"\n          isActive={!isCustom}\n        >\n          Default Cards\n        </Button>\n        <Button\n          onClick={() => setIsModalOpen(true)}\n          color=\"yellow\"\n          className=\"ml-4\"\n        >\n          Info\n        </Button>\n      </div>\n\n      {isCustom ? (\n        <div className=\"mb-8\">\n          <input\n            id=\"file-upload\"\n            type=\"file\"\n            accept=\"image/png, image/jpeg, image/jpg\"\n            onChange={handleImageUpload}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Enter Card Name\"\n            value={customText}\n            onChange={handleCustomTextChange}\n            className=\"mb-4 p-2 border rounded-md mr-1\"\n          />\n          <Button\n            onClick={generateCustomCard}\n            color=\"blue\"\n          >\n            Generate Custom Card\n          </Button>\n        </div>\n      ) : (\n        <Button\n          onClick={generateDefaultCard}\n          color=\"green\"\n          className=\"mb-10\"\n        >\n          Generate Card\n        </Button>\n      )}\n\n      {card && (\n        <Card\n          cardRef={cardRef}\n          card={card}\n          // downloadCardImage={downloadCardImage}\n          // copyCardImageToClipboard={copyCardImageToClipboard}\n        />\n      )}\n\n      <InfoModal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}