{"ast":null,"code":"var _jsxFileName = \"/Users/chacenielson/Documents/git-pull/card-generator/src/card-logic/CardStats.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// The card class with information about the card\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Card {\n  constructor() {\n    this.cardName = \"\";\n    this.cardSprite = null;\n    this.AccuracyPoints = 0;\n    this.DefencePoints = 0;\n    this.DamagePoints = 0;\n    this.HealthPoints = 0;\n    this.rarity = null;\n    this.Trigger = \"\";\n    this.Effect = \"\";\n  }\n}\n\n// Initial values for context\nexport const initialGlobalCardStats = {\n  healthRange: [2, 5],\n  damageRange: [1, 4],\n  defenceRange: [2, 4],\n  accuracyRange: [1, 5],\n  distributionPoints: 12\n};\nexport const initialUsePointDistributionSystem = true;\n\n// Create context\nconst CardStatsContext = /*#__PURE__*/createContext();\nexport const CardStatsProvider = ({\n  children\n}) => {\n  _s();\n  const [globalCardStats, setGlobalCardStats] = useState(initialGlobalCardStats);\n  const [usePointDistributionSystem, setUsePointDistributionSystem] = useState(initialUsePointDistributionSystem);\n  const resetCardStats = () => {\n    setGlobalCardStats(initialGlobalCardStats);\n    setUsePointDistributionSystem(initialUsePointDistributionSystem);\n  };\n  return /*#__PURE__*/_jsxDEV(CardStatsContext.Provider, {\n    value: {\n      globalCardStats,\n      setGlobalCardStats,\n      usePointDistributionSystem,\n      setUsePointDistributionSystem,\n      resetCardStats\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(CardStatsProvider, \"wkoBwpjexWnKs4YOlQmEWstaVW4=\");\n_c = CardStatsProvider;\nvar _c;\n$RefreshReg$(_c, \"CardStatsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","Card","constructor","cardName","cardSprite","AccuracyPoints","DefencePoints","DamagePoints","HealthPoints","rarity","Trigger","Effect","initialGlobalCardStats","healthRange","damageRange","defenceRange","accuracyRange","distributionPoints","initialUsePointDistributionSystem","CardStatsContext","CardStatsProvider","children","_s","globalCardStats","setGlobalCardStats","usePointDistributionSystem","setUsePointDistributionSystem","resetCardStats","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chacenielson/Documents/git-pull/card-generator/src/card-logic/CardStats.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// The card class with information about the card\nexport class Card {\n  constructor() {\n    this.cardName = \"\";\n    this.cardSprite = null;\n    this.AccuracyPoints = 0;\n    this.DefencePoints = 0;\n    this.DamagePoints = 0;\n    this.HealthPoints = 0;\n    this.rarity = null; \n    this.Trigger = \"\";\n    this.Effect = \"\";\n  }\n}\n\n// Initial values for context\nexport const initialGlobalCardStats = {\n  healthRange: [2, 5],\n  damageRange: [1, 4],\n  defenceRange: [2, 4],\n  accuracyRange: [1, 5],\n  distributionPoints: 12\n};\n\nexport const initialUsePointDistributionSystem = true;\n\n// Create context\nconst CardStatsContext = createContext();\n\nexport const CardStatsProvider = ({ children }) => {\n  const [globalCardStats, setGlobalCardStats] = useState(initialGlobalCardStats);\n  const [usePointDistributionSystem, setUsePointDistributionSystem] = useState(initialUsePointDistributionSystem);\n\n  const resetCardStats = () => {\n    setGlobalCardStats(initialGlobalCardStats);\n    setUsePointDistributionSystem(initialUsePointDistributionSystem);\n  };\n\n  return (\n    <CardStatsContext.Provider value={{ globalCardStats, setGlobalCardStats, usePointDistributionSystem, setUsePointDistributionSystem, resetCardStats }}>\n      {children}\n    </CardStatsContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,IAAI,CAAC;EAChBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,cAAc,GAAG,CAAC;IACvB,IAAI,CAACC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,MAAM,GAAG,EAAE;EAClB;AACF;;AAEA;AACA,OAAO,MAAMC,sBAAsB,GAAG;EACpCC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnBC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpBC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACrBC,kBAAkB,EAAE;AACtB,CAAC;AAED,OAAO,MAAMC,iCAAiC,GAAG,IAAI;;AAErD;AACA,MAAMC,gBAAgB,gBAAGvB,aAAa,CAAC,CAAC;AAExC,OAAO,MAAMwB,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAACc,sBAAsB,CAAC;EAC9E,MAAM,CAACa,0BAA0B,EAAEC,6BAA6B,CAAC,GAAG5B,QAAQ,CAACoB,iCAAiC,CAAC;EAE/G,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BH,kBAAkB,CAACZ,sBAAsB,CAAC;IAC1Cc,6BAA6B,CAACR,iCAAiC,CAAC;EAClE,CAAC;EAED,oBACElB,OAAA,CAACmB,gBAAgB,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEN,eAAe;MAAEC,kBAAkB;MAAEC,0BAA0B;MAAEC,6BAA6B;MAAEC;IAAe,CAAE;IAAAN,QAAA,EAClJA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAACX,EAAA,CAdWF,iBAAiB;AAAAc,EAAA,GAAjBd,iBAAiB;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}